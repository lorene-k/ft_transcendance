ADDED
- chat.css
- /public/chat/
- /public/assets/
- public/script/chat.ts
- src/plugins/chatplugin.ts
- chat.controller.ts

EDITED
- tailwind.css
- root.ts
- app.ts
- schema.sql

--------------------------------------------------
TO DO

1. Chat
- Socket.io chat setup
- Inject messages & names into html (API call)
- Close connection on logout/session stop
- Validate the session on every socket event.

2. History
- Message DB
- History API

3. Blocking user
- The user should be able to block other users, preventing them from seeing any
further messages from the blocked account.

4. Inviting user to game
5. Tournament notifs
6. Player profile access
!!!! REMOVE PLAIN CSS (pong.html)


--------------------------------------------------
- API for history using GET /api/messages

CHAT PLUGIN - in chat.plugin.ts :

import { FastifyInstance, FastifyPluginOptions } from "fastify";
import fp from "fastify-plugin";

const chatPlugin = async (fastify: FastifyInstance, options: FastifyPluginOptions) => {
  fastify.io.on("connection", (socket) => {
    console.log("ðŸŸ¢ A user connected:", socket.id);

    // Handle incoming messages
    socket.on("chat:message", (msg) => {
      console.log("ðŸ’¬ Message received:", msg);

      // Broadcast to all connected clients
      fastify.io.emit("chat:message", msg);
    });

    socket.on("disconnect", () => {
      console.log("ðŸ”´ User disconnected:", socket.id);
    });
  });
};

export default fp(chatPlugin);




+++++++++++ CHAT HISTORY RESTful API

fastify.get("/api/messages", async () => {
  // Replace with real DB query
  return [
    { user: "Alice", text: "Hi there" },
    { user: "Bob", text: "Hello!" },
  ];
});
